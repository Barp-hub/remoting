<h1 id="目录" class="content-index-heading content-index-heading-level-1"><em>1.</em>目录</h1>
<p>linux下通过命令访问url的方式有多种，主要如下</p>
<h1 id="1.elinks" class="content-index-heading content-index-heading-level-1"><em>2.</em><b>1.<strong>elinks </strong></b></h1>
<div><strong>elinks – lynx-like替代角色模式WWW的浏览器</strong></div>
<p>例如： elinks –dump <a title="" href="http://www.baidu.com/" data-original-title="">http://www.baidu.com</a></p>
<h2 id="2.wget" class="content-index-heading content-index-heading-level-2"><em>2.1.</em><strong>2.wget </strong></h2>
<p><strong>这个会将访问的首页下载到本地</strong></p>
<p>[root@el5-mq2 ~]# wget <a title="" href="http://www.baidu.com/" data-original-title="">http://www.baidu.com</a></p>
<h1 id="3.curl" class="content-index-heading content-index-heading-level-1"><em>3.</em><strong>3.curl</strong></h1>
<p><strong>curl会显示出源码</strong></p>
<p>curl <a title="" href="http://www.baidu.com/index.html" data-original-title="">http://www.baidu.com/index.html</a></p>
<h1 id="4.lynx" class="content-index-heading content-index-heading-level-1"><em>4.</em><strong>4.lynx</strong></h1>
<p>lynx <a title="" href="http://www.baidu.com/" data-original-title="">http://www.baidu.com</a></p>
<h1 id="5.curl使用实践" class="content-index-heading content-index-heading-level-1"><em>5.</em>5.curl使用实践</h1>
<div><b>现在有个需求，因为服务器在收集访问数据，抓取cookie中的value，模拟url访问时需要带上cookie参数，curl命令刚好能完成这个功能。</b></div>
<div><b>首先查看帮助：</b></div>
<div><b>curl -h</b></div>
<div><b> -b/–cookie &#60;name=string/file&#62; Cookie string or file to read cookies from (H)</b></div>
<div><b> -c/–cookie-jar &#60;file&#62; Write cookies to this file after operation (H)</b></div>
<div><b>    –create-dirs   Create necessary local directory hierarchy</b></div>
<div><b>    –crlf          Convert LF to CRLF in upload</b></div>
<div><b>    –crlfile &#60;file&#62; Get a CRL list in PEM format from the given file</b></div>
<div></div>
<div><b>可以使用-b参数来完成，具体使用如下：</b></div>
<div><b>  <em>curl</em> –<em>b</em> “key1=val1;key2=val2;”<br />
</b></div>
<div><b>或直接使用文件</b></div>
<div><b>curl -b ./cookie.txt</b></div>
<div>编写测试实例：</div>
<div>curl -b “user_trace_token=20150518150621-02994ed9a0fb42d1906a56258e072fc4;LGUID=20150515135257-a33a769c-fac6-11e4-91ce-5254005c3644” http://10.10.26.164:1235/click?v=1&#38;logtype=deliver&#38;position=home_hot-0&#38;orderid=10197777&#38;userid=1942556&#38;positionid=148&#38;url=http%3a%2f%2fwww.lagou.com%2fjobs%2f317000.html%3fsource%3dhome_hot%26i%3dhome_hot-5&#38;fromsite=http%3a%2f%2fwww.lagou.com%2fzhaopin%2fAndroid%3flabelWords%3dlabel%26utm_source%3dAD__baidu_pinzhuan%26utm_medium%3dsem%26utm_campaign%3dSEM&#38;optime=2015-06-15_20:00:00</div>
<div></div>
<div>发现这样还是不可以，url附带的参数取不到。使用-d 参数传递url参数，使用-G 把请求方式配置为GET就OK了，如下：</div>
<div></div>
<div>curl -b “user_trace_token=20150518150621-02994ed9a0fb42d1906a56258e072fc4;LGUID=20150515135257-a33a769c-fac6-11e4-91ce-5254005c3644;LGSID=20150518150621-02994ed9a0fb42d1906a56258e072fc4;LGRID=20150617230732-4ea87972-1580-11e5-9a88-000c29653e90;” -d “v=1&#38;logtype=deliver&#38;position=i_home-1&#38;orderid=10197777&#38;userid=1942556&#38;positionid=148&#38;url=http%3a%2f%2f<a title="" href="http://www.lagou.com%2Fjobs%2F317000.html%3Fsource%3Dhome_hot%26i%3Dhome_hot-5%26fromsite%3Dhttp:%2F%2Fwww.lagou.com%2Fzhaopin%2Fandroid%3Flabelwords%3Dlabel%26utm_source%3Dad__baidu_pinzhuan%26utm_medium%3Dsem%26utm_campaign%3Dsem%26optime%3D2015-06-15_20:00:0/" data-original-title="">www.lagou.com%2fjobs%2f317000.html%3fsource%3dhome_hot%26i%3dhome_hot-5&#38;fromsite=http%3a%2f%2fwww.lagou.com%2fzhaopin%2fAndroid%3flabelWords%3dlabel%26utm_source%3dAD__baidu_pinzhuan%26utm_medium%3dsem%26utm_campaign%3dSEM&#38;optime=2015-06-15_20:00:00</a>”    -G  <a title="" href="http://10.10.26.164:1235/click" data-original-title="">http://10.10.26.164:1235/click</a></div>
<div></div>
<div>想要获得response返回的cookie怎么办，使用’-c’参数，同时可以使用-b filename用文件方式表示cookie，配合-c使用更方便</div>
<div>可以先用-c 命令生成一个cookie文件作为模板，再修改这个文件作为-b 参数的文件名。</div>
<div>使用如下：</div>
<div>curl -b c1.txt -c c2.txt -d “v=1&#38;_v=j31&#38;a=406405635&#38;t=pageview&#38;_s=1&#38;dr=http%3a%2f%2fwww.sogou.com%2ftuguang&#38;dl=http%3A%2F%2Fwww.lagou.com%2F%3futm_source%3dad_sougou_pingzhuan&#38;ul=zh-cn&#38;de=UTF-8&#38;dt=%E6%8B%89%E5%8B%BE%E7%BD%91-%E6%9C%80%E4%B8%93%E4%B8%9A%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E6%8B%9B%E8%81%98%E5%B9%B3%E5%8F%B0&#38;sd=24-bit&#38;sr=1600×900&#38;vp=1583×291&#38;je=1&#38;fl=18.0%20r0&#38;_u=MACAAAQBK~&#38;jid=&#38;cid=1312768212.1431333683&#38;tid=UA-41268416-1&#38;z=1204746223”    -G  http://192.168.52.130:1234/collect</div>
<div>生成的c2.txt内容如下：</div>
<div></div>
<div># Netscape HTTP Cookie File<br />
# http://curl.haxx.se/docs/http-cookies.html<br />
# This file was generated by libcurl! Edit at your own risk.192.168.52.130 FALSE / FALSE 1757574737 user_trace_token 20150914151217-eedd019e-5aaf-11e5-8a69-000c29653e90<br />
192.168.52.130 FALSE / FALSE 1442217595 LGSID 20150914152955-652a13c5-5ab2-11e5-846d-000c29653e90<br />
192.168.52.130 FALSE / FALSE 1442217595 PRE_UTM<br />
192.168.52.130 FALSE / FALSE 1442217595 PRE_HOST www.huxiu.com<br />
192.168.52.130 FALSE / FALSE 1442217595 PRE_SITE http%3A%2F%2Fwww.huxiu.com%2Ftuguang<br />
192.168.52.130 FALSE / FALSE 1442217595 PRE_LAND http%3A%2F%2Fwww.lagou.com%2F%3F<br />
192.168.52.130 FALSE / FALSE 0 LGRID 20150914152955-652a1630-5ab2-11e5-846d-000c29653e90<br />
192.168.52.130 FALSE / FALSE 1757574737 LGUID 20150914151217-eedd0624-5aaf-11e5-8a69-000c29653e90</div>
<p>转载：<a title="" href="http://www.yetdata.com" data-original-title="">AI 数据</a> » <a title="" href="http://www.yetdata.com/archives/128" data-original-title="">linux 使用curl命令访问url并模拟cookie</a></p>
