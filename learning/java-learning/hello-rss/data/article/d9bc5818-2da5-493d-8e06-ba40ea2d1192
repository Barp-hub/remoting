In this post, let us see how to access parent VO attributes from child VO and child VO attributes from parent VO using view link. To have the basic idea about view links and how to create them, you can go through my blog post '<a href="http://www.adftips.com/2010/10/adf-model-creating-view-link.html">ADF Model: Creating View Link</a>'.<br /><br /><b>Example Use Case:</b><br />For example we have two VOs DeptVO and EmpVO and both are linked via foreign key 'DeptId' using the view link EmpVOToDeptVO. Here, this relationship depicts the parent-child relationship using the foreign key DeptId. In other words, for a given current EmpVO(child) row, I need to know the DeptName from DeptVO(parent). Similarly, for a given current DeptVO(parent) row, I need to know all the empVO(child) rows. Sample application demonstrating this example can be downloaded from <a href="http://adftips.googlecode.com/files/ViewLinkAccessorExample.zip">here</a>.<br /><br /><b> Implementation Steps</b>:<br />1. Create EmpVO and DeptVO and generate RowImpl classes for both of these two VOs.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TRJXX4hI3OI/AAAAAAAAATw/kqywWzXHSsQ/s1600/1.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TRJXX4hI3OI/AAAAAAAAATw/kqywWzXHSsQ/s1600/1.JPG" /></a></div><br />2. Now, create a new view link say DeptVOToEmpVO between these two VOs via foreign key DeptId.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TRJXYoxjdCI/AAAAAAAAAT0/5qcJMb7Si78/s1600/2.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="115" src="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TRJXYoxjdCI/AAAAAAAAAT0/5qcJMb7Si78/s320/2.JPG" width="320" /></a></div><br />3. In the view link definition, select options to generate accessors in both source and destination VOs. i.e., in DeptVO and EmpVO.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TRJXZnG4YLI/AAAAAAAAAT4/2sVH0PkxOso/s1600/3.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="196" src="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TRJXZnG4YLI/AAAAAAAAAT4/2sVH0PkxOso/s320/3.JPG" width="320" /></a></div><br />4. Checking the above options will generate accessor methods in EmpVORowImpl and DeptVORowImpl. The accessor's return type in each VO is based on the type of relationship between the VOs. In other words, as the relationship between Dept and Emp is 1-to-many, the accessor in DeptVORowImpl will return multiple Emp rows(i.e, the return type of the accessor will be RowIterator). And, the accessor in EmpVORowImpl will return a single row (as an employee can be in only one dept).<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TRJXcWWXOpI/AAAAAAAAAUE/p7fOvomoybE/s1600/6.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="103" src="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TRJXcWWXOpI/AAAAAAAAAUE/p7fOvomoybE/s320/6.JPG" width="320" /></a></div><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TRJXdo7bOiI/AAAAAAAAAUI/rGuJGDZm5nk/s1600/7.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="100" src="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TRJXdo7bOiI/AAAAAAAAAUI/rGuJGDZm5nk/s320/7.JPG" width="320" /></a></div><br />If you observe the source of EmpVO and DeptVO, you can also see that a tag is added in each of these VOs for the viewLinkAccessor.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TRJXarQ5W9I/AAAAAAAAAT8/bT46_qcJnAo/s1600/4.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="139" src="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TRJXarQ5W9I/AAAAAAAAAT8/bT46_qcJnAo/s320/4.JPG" width="320" /></a></div><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TRJXbSImCJI/AAAAAAAAAUA/d1QpWOicKzs/s1600/5.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="162" src="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TRJXbSImCJI/AAAAAAAAAUA/d1QpWOicKzs/s320/5.JPG" width="320" /></a></div><br />5. Now, you can use these accessors to get reference EmpVO from &nbsp;DeptVO and vice versa. You can also get attribute values from the same. Sample codes below:<br /><br />Sample method in EmpVORowImpl to get the dept name.<br /><div id="iframeDiv8d5b81fe-2c3e-4641-9970-ab6e14789b42" style="display: none; margin: 0px;"><iframe frameborder="0" id="iframe8d5b81fe-2c3e-4641-9970-ab6e14789b42" src="http://www.blogtrog.com/code.aspx?id=8d5b81fe-2c3e-4641-9970-ab6e14789b42" style="border: 1px solid #e0e0e0; height: 140px; margin: 0px; width: 400px;"></iframe></div><div id="noIframeDiv8d5b81fe-2c3e-4641-9970-ab6e14789b42" style="display: block; margin: 0px;"><pre><div><span style="color: black;">  </span><span style="color: blue;">public</span><span style="color: black;"> String getDeptNameViaViewLink() {<br />      </span><span style="color: green;">//</span><span style="color: green;">Getting reference to deptVO row using the view link accessor getDeptVO1()</span><span style="color: green;"><br /></span><span style="color: black;">      Row deptRow </span><span style="color: black;">=</span><span style="color: black;"> </span><span style="color: blue;">this</span><span style="color: black;">.getDeptVO1();<br />      </span><span style="color: green;">//</span><span style="color: green;">Getting the attribute 'Dname' value from the deptRow.</span><span style="color: green;"><br /></span><span style="color: black;">      </span><span style="color: blue;">return</span><span style="color: black;"> (String)deptRow.getAttribute(</span><span style="color: black;">"</span><span style="color: black;">Dname</span><span style="color: black;">"</span><span style="color: black;">);<br />  }</span></div></pre></div><script language="javascript" src="http://www.blogtrog.com/scripts/bt_code.js" type="text/javascript"></script><script language="javascript" type="text/javascript">bt_code_init('8d5b81fe-2c3e-4641-9970-ab6e14789b42'); </script><br />Sample method in&nbsp;DeptVORowImpl to get the list of employees in the dept.<br /><div id="iframeDiv5144aa49-1c8c-4aef-a853-81ac089b90f7" style="display: none; margin: 0px;"><iframe frameborder="0" id="iframe5144aa49-1c8c-4aef-a853-81ac089b90f7" src="http://www.blogtrog.com/code.aspx?id=5144aa49-1c8c-4aef-a853-81ac089b90f7" style="border: 1px solid #e0e0e0; height: 280px; margin: 0px; width: 400px;"></iframe></div><div id="noIframeDiv5144aa49-1c8c-4aef-a853-81ac089b90f7" style="display: block; margin: 0px;"><pre><div><span style="color: black;">  </span><span style="color: blue;">public</span><span style="color: black;"> List getEmpNamesViaViewLink() {<br />      </span><span style="color: green;">//</span><span style="color: green;">Getting reference to empVO row using the view link accessor getEmpVO()</span><span style="color: green;"><br /></span><span style="color: black;">      RowIterator empRowIterator </span><span style="color: black;">=</span><span style="color: black;"> </span><span style="color: blue;">this</span><span style="color: black;">.getEmpVO();<br />      </span><span style="color: green;">//</span><span style="color: green;">Creating an empty List to store all emp names</span><span style="color: green;"><br /></span><span style="color: black;">      List empNames </span><span style="color: black;">=</span><span style="color: black;"> </span><span style="color: blue;">new</span><span style="color: black;"> ArrayList();<br />      </span><span style="color: green;">//</span><span style="color: green;">iterating through all employee rows</span><span style="color: green;"><br /></span><span style="color: black;">      </span><span style="color: blue;">while</span><span style="color: black;">(empRowIterator.hasNext()){<br />          </span><span style="color: green;">//</span><span style="color: green;">getting emp row one by one from the iterator</span><span style="color: green;"><br /></span><span style="color: black;">          Row empRow </span><span style="color: black;">=</span><span style="color: black;"> empRowIterator.next();<br />          </span><span style="color: green;">//</span><span style="color: green;">adding emp name to the empNames list</span><span style="color: green;"><br /></span><span style="color: black;">          empNames.add(empRow.getAttribute(</span><span style="color: black;">"</span><span style="color: black;">Ename</span><span style="color: black;">"</span><span style="color: black;">));<br />      }<br />      </span><span style="color: green;">//</span><span style="color: green;">returning all empNames corresponding to the current dept</span><span style="color: green;"><br /></span><span style="color: black;">      </span><span style="color: blue;">return</span><span style="color: black;"> empNames;<br />  }</span></div></pre></div><script language="javascript" src="http://www.blogtrog.com/scripts/bt_code.js" type="text/javascript"></script><script language="javascript" type="text/javascript">bt_code_init('5144aa49-1c8c-4aef-a853-81ac089b90f7'); </script><br /><b>How to call/use these view link accessor methods in AMImpl methods?</b><br />This should be now pretty straightforward. Here is the sample AMImpl method which prints emp names in each dept. The code is self-explanatory.<br /><div id="iframeDiv9b64ed39-8a77-41f4-96ed-df2808af683f" style="display: none; margin: 0px;"><iframe frameborder="0" id="iframe9b64ed39-8a77-41f4-96ed-df2808af683f" src="http://www.blogtrog.com/code.aspx?id=9b64ed39-8a77-41f4-96ed-df2808af683f" style="border: 1px solid #e0e0e0; height: 300px; margin: 0px; width: 400px;"></iframe></div><div id="noIframeDiv9b64ed39-8a77-41f4-96ed-df2808af683f" style="display: block; margin: 0px;"><pre><div><span style="color: black;">    </span><span style="color: blue;">public</span><span style="color: black;"> </span><span style="color: blue;">void</span><span style="color: black;"> sampleMethod() {<br />        </span><span style="color: green;">//</span><span style="color: green;">getting reference to deptVO</span><span style="color: green;"><br /></span><span style="color: black;">        ViewObjectImpl deptVO </span><span style="color: black;">=</span><span style="color: black;"> </span><span style="color: blue;">this</span><span style="color: black;">.getDeptVO();<br />        </span><span style="color: green;">//</span><span style="color: green;">setting range size to -1 to get all dept rows</span><span style="color: green;"><br /></span><span style="color: black;">        deptVO.setRangeSize(</span><span style="color: black;">-</span><span style="color: black;">1</span><span style="color: black;">);<br />        </span><span style="color: green;">//</span><span style="color: green;">getting all dept rows</span><span style="color: green;"><br /></span><span style="color: black;">        Row[] deptRows </span><span style="color: black;">=</span><span style="color: black;"> deptVO.getAllRowsInRange();<br />        </span><span style="color: green;">//</span><span style="color: green;">iterating through all dept rows</span><span style="color: green;"><br /></span><span style="color: black;">        </span><span style="color: blue;">for</span><span style="color: black;"> (</span><span style="color: blue;">int</span><span style="color: black;"> i </span><span style="color: black;">=</span><span style="color: black;"> </span><span style="color: black;">0</span><span style="color: black;">; i </span><span style="color: black;">&lt;</span><span style="color: black;"> deptRows.length; i</span><span style="color: black;">++</span><span style="color: black;">) {<br />            </span><span style="color: green;">//</span><span style="color: green;">getting reference to each dept row. Note that we're type casting the VO reference type to DeptVORowImpl.</span><span style="color: green;"><br /></span><span style="color: black;">            DeptVORowImpl deptRow </span><span style="color: black;">=</span><span style="color: black;"> (DeptVORowImpl)deptRows[i];<br />            </span><span style="color: green;">//</span><span style="color: green;">printing dept name</span><span style="color: green;"><br /></span><span style="color: black;">            System.out.println(</span><span style="color: black;">"</span><span style="color: black;">Employees in dept: </span><span style="color: black;">"</span><span style="color: black;"> </span><span style="color: black;">+</span><span style="color: black;"><br />                               deptRow.getAttribute(</span><span style="color: black;">"</span><span style="color: black;">Dname</span><span style="color: black;">"</span><span style="color: black;">));<br />            </span><span style="color: green;">//</span><span style="color: green;">For each dept row, getting reference to empVO which contains all employees corresponding to current dept</span><span style="color: green;"><br /></span><span style="color: black;">            RowIterator empRows </span><span style="color: black;">=</span><span style="color: black;"> deptRow.getEmpVO();<br />            </span><span style="color: green;">//</span><span style="color: green;">iterating each emp row</span><span style="color: green;"><br /></span><span style="color: black;">            </span><span style="color: blue;">while</span><span style="color: black;"> (empRows.hasNext()) {<br />                Row empRow </span><span style="color: black;">=</span><span style="color: black;"> empRows.next();<br />                </span><span style="color: green;">//</span><span style="color: green;">printing emp name from each row</span><span style="color: green;"><br /></span><span style="color: black;">                System.out.println(empRow.getAttribute(</span><span style="color: black;">"</span><span style="color: black;">Ename</span><span style="color: black;">"</span><span style="color: black;">));<br />            }<br />        }<br />    }</span></div></pre></div><script language="javascript" src="http://www.blogtrog.com/scripts/bt_code.js" type="text/javascript"></script><script language="javascript" type="text/javascript">bt_code_init('9b64ed39-8a77-41f4-96ed-df2808af683f'); </script><br />Here is the sample output in console on running the above AMImpl method.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TRJXeaHd5QI/AAAAAAAAAUM/IxokluGrkoc/s1600/8.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TRJXeaHd5QI/AAAAAAAAAUM/IxokluGrkoc/s1600/8.JPG" /></a></div><br /><br />That's it. Now, you got the idea how to use view link accessors to get the values of child attributes from parent and vice versa. Enjoy!