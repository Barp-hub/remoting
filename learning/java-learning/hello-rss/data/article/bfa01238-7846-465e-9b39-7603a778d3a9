When it comes to date-effectivity, the tricky part is date-effective updates to the rows. It's not as simple as updating non date-effective rows. You need to know the <a href="http://www.adftips.com/2010/12/learning-basics-of-date-effectivity-in.html">basics of date-effectivity</a> like what is an effective date and how it impacts <a href="http://www.adftips.com/2010/12/adf-ui-implementing-date-effective.html">search</a>, create and update operations on date-effective records. Here, we're going to discuss different date-effective update modes available in ADF 11g and their behavior.<br /><br />All the date-effective update modes are defined as constants in <a href="http://download.oracle.com/docs/cd/E15523_01/apirefs.1111/e10653/oracle/jbo/Row.html">oracle.job.Row</a> class as any kind of effective dated operation is performed on a row itself. Before going into details, let us take an example to explain the concepts. For example, we'll take the same example of 'Job' date-effective object and explain different date-effective update modes available. <a href="http://adftips.googlecode.com/files/DateEffective_Update_Modes.zip">Sample application having the required code to perform the DE update operations can be downloaded from here</a>.<br /><br /><b>The following DE update modes available in Jdeveloper 11g:</b><br /><br /><b>1. EFFDT_UPDATE_CHANGE_INSERT_MODE:</b> When an effective dated row is updated in "change insert" mode, the modified row is end dated on the effective date and a new row is inserted that fits between the effective date and the start date of the next row in the effective date time line.<br /><br />For example,&nbsp;&nbsp;if the&nbsp;Job with JobId 100000020529001 has the following effective-dated row<br /><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/_ex9GjJ9fvbk/TR93R0T9UFI/AAAAAAAAAWI/MOWtsV6JTjY/s1600/1.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="44" src="http://1.bp.blogspot.com/_ex9GjJ9fvbk/TR93R0T9UFI/AAAAAAAAAWI/MOWtsV6JTjY/s640/1.JPG" width="640" /></a></div><br /><br /><div class="separator" style="clear: both; text-align: center;"></div>From the above data, you can see that the details of the job 'Apps Engineer' from 01-Jan-1990 to 31-Dec-4712. And, for example if we want to increase the salary ranges of this job to MinSal=25000 and MaxSal=35000 from 01-Jan-2011 onwards. To achieve this, we need to end date the existing row at 31-Dec-2010 and create a new record for the job from 01-Jan-2011 to 31-12-4712. For such cases, we use this&nbsp;EFFDT_UPDATE_CHANGE_INSERT_MODE.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TR95MIFvuHI/AAAAAAAAAWU/YEx9Dos96pU/s1600/2.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="241" src="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TR95MIFvuHI/AAAAAAAAAWU/YEx9Dos96pU/s320/2.JPG" width="320" /></a></div>After updating the above job record with effective date 01-Jan-2011, the resultant rows will be as below:<br /><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TR938NasZTI/AAAAAAAAAWQ/a7VrAUlvKtQ/s1600/3.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="68" src="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TR938NasZTI/AAAAAAAAAWQ/a7VrAUlvKtQ/s640/3.JPG" width="640" /></a></div><br />Again, if we want to update the MedicalCheckRequired attribute to 'Y' effective 01-Jan-1950 (till 31-Dec-2010), we need to update again with effective date&nbsp;01-Jan-1950.<br /><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TR95dcXA9EI/AAAAAAAAAWc/LJaJo424n-w/s1600/4.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="239" src="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TR95dcXA9EI/AAAAAAAAAWc/LJaJo424n-w/s320/4.JPG" width="320" /></a></div>&nbsp;After updating, the resultant rows will be:<br /><a href="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TR95QsmLymI/AAAAAAAAAWY/TH-p4IdxNRs/s1600/5.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="90" src="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TR95QsmLymI/AAAAAAAAAWY/TH-p4IdxNRs/s640/5.JPG" style="cursor: move;" width="640" /></a><br /><b><br /></b><br /><br /><b><br /></b><br /><b>2. EFFDT_UPDATE_CORRECTION:</b> When an effective dated row is updated in "correction" mode, the effective start date and effective end date is left unchanged. We generally use this correction mode to correct the existing data of a single date-effective record (Correction mode won't create a new row, it'll just correct/modify the existing date-effective record data).<br /><br />For example, let us take the same above 3 date-effective job records and if I want to correct the JobLevel of the Job record [100000020529001,01-Jan-1900,31-Dec-1949] to 1 from existing value 2, we need to correct the record in&nbsp;EFFDT_UPDATE_CORRECTION mode. For correction, we can use any date between EffectiveStartDate and EffectiveEndDate as the effective date.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/_ex9GjJ9fvbk/TR97dLm_c4I/AAAAAAAAAWk/IPRWT1Zn-iQ/s1600/6.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="240" src="http://1.bp.blogspot.com/_ex9GjJ9fvbk/TR97dLm_c4I/AAAAAAAAAWk/IPRWT1Zn-iQ/s320/6.JPG" width="320" /></a></div>&nbsp;After correction, the result will be as follows:<br /><a href="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TR97cGRUfEI/AAAAAAAAAWg/ROP_voKJr3M/s1600/7.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="82" src="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TR97cGRUfEI/AAAAAAAAAWg/ROP_voKJr3M/s640/7.JPG" width="640" /></a><br /><br /><br /><br /><br /><br /><b><span class="Apple-style-span" style="font-weight: normal;"><b>3. EFFDT_UPDATE_MODE:</b></span><span class="Apple-style-span" style="font-weight: normal;">&nbsp;</span><span class="Apple-style-span" style="font-weight: normal;">When an effective dated row is updated in "update" mode, the modified row is end dated on the effective date and a new row is created with the changed values.</span></b><br /><br />For example, let us continue with the same above 3 rows and I want to update the JobName to 'Apps Specialist' from 'Apps Engineer' effective 01-Jan-2015, we can use&nbsp;EFFDT_UPDATE_MODE.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TR9_irlSrXI/AAAAAAAAAWs/8B3w092Y60Y/s1600/8.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="241" src="http://4.bp.blogspot.com/_ex9GjJ9fvbk/TR9_irlSrXI/AAAAAAAAAWs/8B3w092Y60Y/s320/8.JPG" width="320" /></a></div>After updating in UPDATE mode, the resultant rows will be:<br /><a href="http://1.bp.blogspot.com/_ex9GjJ9fvbk/TR9_hrxvMcI/AAAAAAAAAWo/ciBF_k1UhAE/s1600/9.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="100" src="http://1.bp.blogspot.com/_ex9GjJ9fvbk/TR9_hrxvMcI/AAAAAAAAAWo/ciBF_k1UhAE/s640/9.JPG" width="640" /></a><br />Here, one thing that we need to keep is that&nbsp;<span class="Apple-style-span">EFFDT_UPDATE_MODE</span>&nbsp;works only for the last date-effective row. The reason is that this mode will always create the modified new record till EOT(31-12-4712) starting from the given effective date. i.e., if we try to update the row&nbsp;[100000020529001,01-Jan-1900,31-Dec-1949] with effective date 01-Jan-1925 in UPDATE_MODE mode, it'll try to create the new record&nbsp;[100000020529001,01-Jan-1920,31-Dec-4712] which will result in overlap with the existing record&nbsp;[100000020529001,01-Jan-1950,31-Dec-2010]&nbsp;and throws exception saying 'the date effective operation will result in gaps or overlaps'.<br /><br /><b>4. EFFDT_UPDATE_OVERRIDE_MODE:</b>&nbsp;When an effective dated row is updated in "override" mode, the modified row is end dated on the effective date and the start date of the next row in the effective date time line is set to effective date + 1 day.<br /><br />For example, let us continue with the above 4 date-effective rows, and if we want to move the EffectiveStartDate of the Job row&nbsp;[100000020529001,01-Jan-2015,31-Dec-4712] to 01-Jan-2013. i.e., we want to make the 'Apps Specialist' job title applicable from 01-Jan-2013 onwards instead of 01-Jan-2015. And, you can also set/change the other attributes for the resultant updated row&nbsp;[100000020529001,01-Jan-2013,31-Dec-4712] (for e.g., I'm setting the JobLevel from 2 to 3).<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TR-DBOiTcFI/AAAAAAAAAW8/5axdSOU3C88/s1600/10.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="240" src="http://3.bp.blogspot.com/_ex9GjJ9fvbk/TR-DBOiTcFI/AAAAAAAAAW8/5axdSOU3C88/s320/10.JPG" width="320" /></a></div>After updating the above rows with effective date 01-Jan-2013 in&nbsp;EFFDT_UPDATE_OVERRIDE_MODE will result in the following rows:<br /><a href="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TR-DAYt3RgI/AAAAAAAAAW4/WmWL-S20bgU/s1600/11.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="108" src="http://2.bp.blogspot.com/_ex9GjJ9fvbk/TR-DAYt3RgI/AAAAAAAAAW4/WmWL-S20bgU/s640/11.JPG" width="640" /></a> <br />From the above table, you can observe that&nbsp;EFFDT_UPDATE_OVERRIDE_MODE didn't create any new rows. It just moved the existing ESD to the passed effective date.<br /><br /><b>5. EFFDT_UPDATE_NEW_EARLIEST_CHANGE_MODE:</b>&nbsp;Updating in "new earliest change" mode is supported only in Multiple Changes Per Day (MCPD). MCPD entities are the entities that support multiple date-effective updates on a single day. We're not covering this mode in this post as it would be out of scope of this post.<br /><br />Here is the method that I wrote to accomplish all of these DE update operations with different DE update modes (download the <a href="http://adftips.googlecode.com/files/DateEffective_Update_Modes.zip">sample application</a> for to find the method references used in the below code).<br /><div id="iframeDiv162ed4a1-a0d1-4689-9ea7-ec0d5f28ee35" style="display: none; margin: 0px;"><iframe frameborder="0" id="iframe162ed4a1-a0d1-4689-9ea7-ec0d5f28ee35" src="http://www.blogtrog.com/code.aspx?id=162ed4a1-a0d1-4689-9ea7-ec0d5f28ee35" style="border: 1px solid rgb(224, 224, 224); height: 500px; margin: 0px; width: 400px;"></iframe></div><div id="noIframeDiv162ed4a1-a0d1-4689-9ea7-ec0d5f28ee35" style="display: block; margin: 0px;"><pre><div><span style="color: black;">    </span><span style="color: blue;">public</span><span style="color: black;"> </span><span style="color: blue;">void</span><span style="color: black;"> updateJobRow(Long jobId, Date effectiveDate, String jobName,<br />                             String status, Long minSal, Long maxSal,<br />                             String medCheckReq, Integer jobLevel) {<br />        </span><span style="color: blue;">if</span><span style="color: black;"> (effectiveDate </span><span style="color: black;">==</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;">) {<br />            </span><span style="color: blue;">throw</span><span style="color: black;"> </span><span style="color: blue;">new</span><span style="color: black;"> JboException(</span><span style="color: black;">"</span><span style="color: black;">Effective Date cannot be null</span><span style="color: black;">"</span><span style="color: black;">);<br />        }<br />        </span><span style="color: blue;">if</span><span style="color: black;"> (effectiveDate.compareTo(DateUtils.convertTosqlDate(MIN_START_DATE)) </span><span style="color: black;">&lt;=</span><span style="color: black;"><br />            </span><span style="color: black;">0</span><span style="color: black;"> </span><span style="color: black;">||</span><span style="color: black;"><br />            effectiveDate.compareTo(DateUtils.convertTosqlDate(MAX_END_DATE)) </span><span style="color: black;">&gt;=</span><span style="color: black;"><br />            </span><span style="color: black;">0</span><span style="color: black;">) {<br />            </span><span style="color: blue;">throw</span><span style="color: black;"> </span><span style="color: blue;">new</span><span style="color: black;"> JboException(</span><span style="color: black;">"</span><span style="color: black;">UpdateDate cannot be before SOT and cannot be later than EOT</span><span style="color: black;">"</span><span style="color: black;">);<br />        }<br />        </span><span style="color: green;">//</span><span style="color: green;">getting the Job row effective as of the given effectiveDate</span><span style="color: green;"><br /></span><span style="color: black;">        Row jobRow </span><span style="color: black;">=</span><span style="color: black;"> getRowAsOfDate(jobId, effectiveDate);<br />        </span><span style="color: blue;">if</span><span style="color: black;"> (jobRow </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;">) {<br />            </span><span style="color: blue;">try</span><span style="color: black;"> {<br />                </span><span style="color: green;">//</span><span style="color: green;">Set the required date-effective mode. Here I'm setting it to EFFDT_UPDATE_CHANGE_INSERT_MODE</span><span style="color: green;"><br /></span><span style="color: black;">                jobRow.setEffectiveDateMode(Row.EFFDT_UPDATE_CHANGE_INSERT_MODE);<br />                </span><span style="color: green;">//</span><span style="color: green;">Setting the passed attributes to the updated row</span><span style="color: green;"><br /></span><span style="color: black;">                </span><span style="color: blue;">if</span><span style="color: black;"> (jobName </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;"> </span><span style="color: black;">&amp;&amp;</span><span style="color: black;"> </span><span style="color: black;">!</span><span style="color: black;">""</span><span style="color: black;">.equals(jobName))<br />                    jobRow.setAttribute(</span><span style="color: black;">"</span><span style="color: black;">JobName</span><span style="color: black;">"</span><span style="color: black;">, jobName);<br />                </span><span style="color: blue;">if</span><span style="color: black;"> (status </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;"> </span><span style="color: black;">&amp;&amp;</span><span style="color: black;"> </span><span style="color: black;">!</span><span style="color: black;">""</span><span style="color: black;">.equals(status))<br />                    jobRow.setAttribute(</span><span style="color: black;">"</span><span style="color: black;">Status</span><span style="color: black;">"</span><span style="color: black;">, status);<br />                </span><span style="color: blue;">if</span><span style="color: black;"> (minSal </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;"> </span><span style="color: black;">&amp;&amp;</span><span style="color: black;"> </span><span style="color: black;">!</span><span style="color: black;">""</span><span style="color: black;">.equals(minSal))<br />                    jobRow.setAttribute(</span><span style="color: black;">"</span><span style="color: black;">MinSal</span><span style="color: black;">"</span><span style="color: black;">, minSal);<br />                </span><span style="color: blue;">if</span><span style="color: black;"> (maxSal </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;"> </span><span style="color: black;">&amp;&amp;</span><span style="color: black;"> </span><span style="color: black;">!</span><span style="color: black;">""</span><span style="color: black;">.equals(maxSal))<br />                    jobRow.setAttribute(</span><span style="color: black;">"</span><span style="color: black;">MaxSal</span><span style="color: black;">"</span><span style="color: black;">, maxSal);<br />                </span><span style="color: blue;">if</span><span style="color: black;"> (jobLevel </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;"> </span><span style="color: black;">&amp;&amp;</span><span style="color: black;"> </span><span style="color: black;">!</span><span style="color: black;">""</span><span style="color: black;">.equals(jobLevel))<br />                    jobRow.setAttribute(</span><span style="color: black;">"</span><span style="color: black;">JobLevel</span><span style="color: black;">"</span><span style="color: black;">, jobLevel);<br />                </span><span style="color: blue;">if</span><span style="color: black;"> (medCheckReq </span><span style="color: black;">!=</span><span style="color: black;"> </span><span style="color: blue;">null</span><span style="color: black;"> </span><span style="color: black;">&amp;&amp;</span><span style="color: black;"> </span><span style="color: black;">!</span><span style="color: black;">""</span><span style="color: black;">.equals(medCheckReq))<br />                    jobRow.setAttribute(</span><span style="color: black;">"</span><span style="color: black;">MedCheckReq</span><span style="color: black;">"</span><span style="color: black;">, medCheckReq);<br />            } </span><span style="color: blue;">catch</span><span style="color: black;"> (Exception e) {<br />                e.printStackTrace();<br />            }<br />            </span><span style="color: blue;">this</span><span style="color: black;">.getDBTransaction().commit();<br />        }<br />    }</span></div></pre></div><script language="javascript" src="http://www.blogtrog.com/scripts/bt_code.js" type="text/javascript"></script><script language="javascript" type="text/javascript">bt_code_init('162ed4a1-a0d1-4689-9ea7-ec0d5f28ee35'); </script><br />In the above method, we're actually getting the Job row effective as of the passed effective date(this will make that effective-dated row as current row) and then performing date-effective update operations basing on that row.<br /><br /><b>Instructions to run the <a href="http://adftips.googlecode.com/files/DateEffective_Update_Modes.zip">sample application</a>:</b><br />1. Create the required tables for illustrating date-effective operations executing the <a href="http://adftips.googlecode.com/files/de_sql.sql">sql script downloading from here</a>.<br />2. Unzip the sample application and, run the DemoAM. Input JobId, effective date and other attributes you want to update and click 'Execute'.<br />3. Change the date-effective update mode in method 'updateJobRow' each time you want to change the update mode(right now it's hard coded to&nbsp;EFFDT_UPDATE_CHANGE_INSERT_MODE), rebuild and continue. You can find the screen shots above how to provide input in AM Tester.<br />4. Query the DB to find the updated rows.<br /><div id='iframeDivc55a9fb0-6439-440c-89ae-f7b636c1959d' style='display:none;margin:0px;'><iframe id='iframec55a9fb0-6439-440c-89ae-f7b636c1959d' src='http://www.blogtrog.com/code.aspx?id=c55a9fb0-6439-440c-89ae-f7b636c1959d' style='width: 400px; height: 200px; border: 1px solid #e0e0e0;margin:0px;' frameborder='0'></iframe></div><div id='noIframeDivc55a9fb0-6439-440c-89ae-f7b636c1959d' style='display:block;margin:0px;'><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style="color: #0000FF;">SELECT</span><span style="color: #000000;"> Job_ID,<br />  TO_CHAR(effective_start_date,</span><span style="color: #FF0000;">'</span><span style="color: #FF0000;">dd-Mon-yyyy</span><span style="color: #FF0000;">'</span><span style="color: #000000;">) </span><span style="color: #0000FF;">AS</span><span style="color: #000000;"> ESD,<br />  TO_CHAR(effective_end_date,</span><span style="color: #FF0000;">'</span><span style="color: #FF0000;">dd-Mon-yyyy</span><span style="color: #FF0000;">'</span><span style="color: #000000;">)   </span><span style="color: #0000FF;">AS</span><span style="color: #000000;"> EED,<br />  JOB_NAME,<br />  MIN_SAL,<br />  MAX_SAL,<br />  STATUS,<br />  JOB_LEVEL,<br />  MED_CHECK_REQ </span><span style="color: #0000FF;">AS</span><span style="color: #000000;"> MED_CHECK<br /></span><span style="color: #0000FF;">FROM</span><span style="color: #000000;"> de_jobs<br /></span><span style="color: #0000FF;">WHERE</span><span style="color: #000000;"> job_id</span><span style="color: #808080;">=</span><span style="color: #800000; font-weight: bold;">100000020529001</span><span style="color: #000000;"><br /></span><span style="color: #0000FF;">ORDER</span><span style="color: #000000;"> </span><span style="color: #0000FF;">BY</span><span style="color: #000000;"> effective_start_date;</span></div></pre></div><script language='javascript' src='http://www.blogtrog.com/scripts/bt_code.js' type='text/javascript'></script><script language='javascript' type='text/javascript'>bt_code_init('c55a9fb0-6439-440c-89ae-f7b636c1959d');</script><br />Enjoy!!!